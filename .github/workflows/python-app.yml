# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python application

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    name: Build and Test on python ${{ matrix.python-version }}, ${{ matrix.poetry-version }} and ${{ matrix.os }}
    strategy:
        fail-fast: false
        matrix:
          python-version: ['3.10']
          poetry-version: ['1.2.0b1']
          os: [ubuntu-latest] 
          # , macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Run image
      uses: abatilo/actions-poetry@v2.0.0
      with:
        poetry-version: ${{ matrix.poetry-version }}
    - name: Install dependencies
      run: |
        poetry update
    - name: Install project
      run: |
        poetry install
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        poetry run flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        poetry run flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        poetry run pytest --cov=tictactoe tests/

  deploy:
    needs: build
    name: Deploy to Heroku
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: AkhileshNS/heroku-deploy@v3.12.12
      with:
        heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
        # Email that you use with heroku
        heroku_email: ${{ secrets.HEROKU_EMAIL }}
        # The appname to use for deploying/updating
        heroku_app_name: ${{ secrets.HEROKU_APP_NAME }}
        # The branch that you would like to deploy to Heroku
        branch: main
        # Will deploy using Dockerfile in project root.
        usedocker: true
